{"version":3,"file":"static/js/850.8f8aeae8.chunk.js","mappings":"oOAEO,SAASA,EAAT,GAA6B,IAATC,EAAQ,EAARA,KACjBC,EAAkCD,EAAlCC,KAAMC,EAA4BF,EAA5BE,UAAWC,EAAiBH,EAAjBG,aAEzB,OACE,2BACE,gBAAKC,IAAG,0CAAqCD,GAAgBE,IAAKJ,KAClE,wBAAKA,IACJC,IAAa,uCAAeA,OAGlC,CCPc,SAASI,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaN,GAASO,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,EAAaI,EAA3B,GAC5B,GAAE,CAACR,KAGF,iCACE,iCACsB,IAArBG,EAAUM,QACT,wBACGN,EACEO,QAAO,WAA+BC,EAAKC,GAApC,IAAGC,EAAH,EAAGA,WAAYjB,EAAf,EAAeA,aAAf,OACNgB,EAAIH,OAAS,GAAKI,EAAa,EAAIjB,CAD7B,IAGPkB,KAAI,SAAAC,GAAa,OAChB,SAACvB,EAAD,CAAwCC,KAAMsB,GAA/BA,EAAcC,UADb,OAKtB,2EAIP,C,uJC/BD,IAAMC,EAAU,mCAEHC,EAAoB,kBAC/BC,MAAM,6DAAD,OACmDF,IAAWV,MAAK,SAAAa,GAAC,OACvEA,EAAEC,MADqE,GAF1C,EAMpBC,EAAyB,SAAAC,GAAK,OACzCJ,MAAM,qDAAD,OACkDF,EADlD,kBACmEM,IACtEhB,MAAK,SAAAa,GAAC,OAAIA,EAAEC,MAAN,GAHiC,EAK9BG,EAAe,SAAAxB,GAAO,OACjCmB,MAAM,sCAAD,OACmCnB,EADnC,oBACsDiB,IACzDV,MAAK,SAAAa,GAAC,OAAIA,EAAEC,MAAN,GAHyB,EAKtBf,EAAe,SAAAN,GAAO,OACjCmB,MAAM,sCAAD,OACmCnB,EADnC,4BAC8DiB,IACjEV,MAAK,SAAAa,GAAC,OAAIA,EAAEC,MAAN,GAHyB,EAKtBI,EAAkB,SAAAzB,GAAO,OACpCmB,MAAM,sCAAD,OACmCnB,EADnC,4BAC8DiB,IACjEV,MAAK,SAAAa,GAAC,OAAIA,EAAEC,MAAN,GAH4B,C","sources":["components/CastItem.jsx","components/Cast.jsx","services/moviesApi.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport function CastItem({ data }) {\n  const { name, character, profile_path } = data;\n\n  return (\n    <li>\n      <img src={`https://image.tmdb.org/t/p/w200/${profile_path}`} alt={name} />\n      <h4>{name}</h4>\n      {character && <p>Character: {character}</p>}\n    </li>\n  );\n}\n\nCastItem.propTypes = {\n  data: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    character: PropTypes.string,\n    profile_path: PropTypes.string.isRequired,\n  }),\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/moviesApi';\nimport { CastItem } from './CastItem';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [movieCast, setMovieCast] = useState([]);\n\n  useEffect(() => {\n    getMovieCast(movieId).then(({ cast }) => setMovieCast(cast));\n  }, [movieId]);\n\n  return (\n    <>\n      <h3>Cast</h3>\n      {movieCast.length !== 0 ? (\n        <ul>\n          {movieCast\n            .filter(({ popularity, profile_path }, idx, arr) =>\n              arr.length > 15 ? popularity > 5 : profile_path\n            )\n            .map(movieCastItem => (\n              <CastItem key={movieCastItem.credit_id} data={movieCastItem} />\n            ))}\n        </ul>\n      ) : (\n        <p>We don't have any info about its cast, sorry!</p>\n      )}\n    </>\n  );\n}\n","const API_KEY = 'fadee9dfff8cb6b1bff36771479589d6';\n\nexport const getTrendingMovies = () =>\n  fetch(`\nhttps://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`).then(r =>\n    r.json()\n  );\n\nexport const getMoviesBySearchQuery = query =>\n  fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`\n  ).then(r => r.json());\n\nexport const getMovieById = movieId =>\n  fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n  ).then(r => r.json());\n\nexport const getMovieCast = movieId =>\n  fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  ).then(r => r.json());\n\nexport const getMovieReviews = movieId =>\n  fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n  ).then(r => r.json());\n"],"names":["CastItem","data","name","character","profile_path","src","alt","Cast","movieId","useParams","useState","movieCast","setMovieCast","useEffect","getMovieCast","then","cast","length","filter","idx","arr","popularity","map","movieCastItem","credit_id","API_KEY","getTrendingMovies","fetch","r","json","getMoviesBySearchQuery","query","getMovieById","getMovieReviews"],"sourceRoot":""}