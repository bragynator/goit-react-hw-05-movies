{"version":3,"file":"static/js/597.5647d55c.chunk.js","mappings":"oOACA,EAAwB,yBAAxB,EAA2D,2BAA3D,EAAoG,+B,SCE7F,SAASA,EAAT,GAA+B,IAAVC,EAAS,EAATA,MAClBC,EACND,EADMC,MAAOC,EACbF,EADaE,YAAaC,EAC1BH,EAD0BG,SAAUC,EACpCJ,EADoCI,QAASC,EAC7CL,EAD6CK,aAAcC,EAC3DN,EAD2DM,aAEvDC,EAAYC,KAAKC,MAAqB,GAAfJ,GACvBK,EAAc,IAAIC,KAAKL,GAAcM,cAE3C,OACE,iCACE,eAAIC,UAAWC,EAAf,SAA8Bb,KAC9B,iBAAKY,UAAWC,EAAhB,WACE,gBACEC,IAAG,0CAAqCb,GACxCc,IAAKZ,GAAWH,KAElB,iBAAKY,UAAWC,EAAhB,WACE,kCAAUJ,MACV,wCAAgBH,EAAhB,QACA,sCACA,uBAAIJ,YAKb,C,aCzBD,EAA2B,+BAA3B,EAAwE,kCCMzD,SAASc,IAAgB,IAAD,IAC7BC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOpB,EAAP,KAAcqB,EAAd,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAM7C,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaT,GAASU,KAAKP,EAC5B,GAAE,CAACH,KAGF,iCACE,SAAC,KAAD,CAAMW,GAAIP,EAAcT,UAAWC,EAAnC,kBAG+B,IAA9BgB,OAAOC,KAAK/B,GAAOgC,SAClB,iCACE,SAACjC,EAAD,CAAWC,MAAOA,KAClB,oDACA,gBAAIa,UAAWC,EAAf,WACE,yBACE,SAAC,KAAD,CAAMe,GAAG,OAAOL,MAAO,CAAEC,KAAMH,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMO,GAAG,UAAUL,MAAO,CAAEC,KAAMH,GAAlC,8BAOR,SAAC,EAAAW,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C,uJC7CD,IAAMC,EAAU,mCAEHC,EAAoB,kBAC/BC,MAAM,6DAAD,OACmDF,IAAWR,MAAK,SAAAW,GAAC,OACvEA,EAAEC,MADqE,GAF1C,EAMpBC,EAAyB,SAAAC,GAAK,OACzCJ,MAAM,qDAAD,OACkDF,EADlD,kBACmEM,IACtEd,MAAK,SAAAW,GAAC,OAAIA,EAAEC,MAAN,GAHiC,EAK9Bb,EAAe,SAAAT,GAAO,OACjCoB,MAAM,sCAAD,OACmCpB,EADnC,oBACsDkB,IACzDR,MAAK,SAAAW,GAAC,OAAIA,EAAEC,MAAN,GAHyB,EAKtBG,EAAe,SAAAzB,GAAO,OACjCoB,MAAM,sCAAD,OACmCpB,EADnC,4BAC8DkB,IACjER,MAAK,SAAAW,GAAC,OAAIA,EAAEC,MAAN,GAHyB,EAKtBI,EAAkB,SAAA1B,GAAO,OACpCoB,MAAM,sCAAD,OACmCpB,EADnC,4BAC8DkB,IACjER,MAAK,SAAAW,GAAC,OAAIA,EAAEC,MAAN,GAH4B,C","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"MovieCard_title__mQEBM\",\"wrapper\":\"MovieCard_wrapper__UNKq4\",\"infoWrapper\":\"MovieCard_infoWrapper__L1SLc\"};","import PropTypes from 'prop-types';\nimport styles from './MovieCard.module.css';\n\nexport function MovieCard({ movie }) {\n  const { title, poster_path, overview, tagline, vote_average, release_date } =\n    movie;\n  const userScore = Math.round(vote_average * 10);\n  const releaseYear = new Date(release_date).getFullYear();\n\n  return (\n    <>\n      <h2 className={styles.title}>{title}</h2>\n      <div className={styles.wrapper}>\n        <img\n          src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n          alt={tagline && title}\n        />\n        <div className={styles.infoWrapper}>\n          <p>Year: {releaseYear}</p>\n          <p>User score: {userScore}%</p>\n          <p>OVERVIEW:</p>\n          <p>{overview}</p>\n        </div>\n      </div>\n    </>\n  );\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    overview: PropTypes.string,\n    tagline: PropTypes.string,\n    vote_average: PropTypes.number,\n    release_date: PropTypes.string,\n  }),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"backLink\":\"MovieDetails_backLink__dzd-p\",\"addInfoList\":\"MovieDetails_addInfoList__rUVXv\"};","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Outlet, Link, useLocation } from 'react-router-dom';\nimport { getMovieById } from 'services/moviesApi';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { Spinner } from 'components/Spinner/Spinner';\nimport styles from './MovieDetails.module.css';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    getMovieById(movieId).then(setMovie);\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinkHref} className={styles.backLink}>\n        Back\n      </Link>\n      {Object.keys(movie).length !== 0 && (\n        <>\n          <MovieCard movie={movie} />\n          <h4>Additional Information</h4>\n          <ul className={styles.addInfoList}>\n            <li>\n              <Link to=\"cast\" state={{ from: backLinkHref }}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link to=\"reviews\" state={{ from: backLinkHref }}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n        </>\n      )}\n      <Suspense fallback={<Spinner />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n","const API_KEY = 'fadee9dfff8cb6b1bff36771479589d6';\n\nexport const getTrendingMovies = () =>\n  fetch(`\nhttps://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`).then(r =>\n    r.json()\n  );\n\nexport const getMoviesBySearchQuery = query =>\n  fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`\n  ).then(r => r.json());\n\nexport const getMovieById = movieId =>\n  fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n  ).then(r => r.json());\n\nexport const getMovieCast = movieId =>\n  fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  ).then(r => r.json());\n\nexport const getMovieReviews = movieId =>\n  fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n  ).then(r => r.json());\n"],"names":["MovieCard","movie","title","poster_path","overview","tagline","vote_average","release_date","userScore","Math","round","releaseYear","Date","getFullYear","className","styles","src","alt","MovieDetails","movieId","useParams","useState","setMovie","backLinkHref","useLocation","state","from","useEffect","getMovieById","then","to","Object","keys","length","Suspense","fallback","Spinner","API_KEY","getTrendingMovies","fetch","r","json","getMoviesBySearchQuery","query","getMovieCast","getMovieReviews"],"sourceRoot":""}